// <auto-generated />
using Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(WakeCapContext))]
    [Migration("20220904231429_seed")]
    partial class seed
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Infrastructure.Models.Seat", b =>
                {
                    b.Property<int>("seatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("seatId"), 1L, 1);

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("tripId")
                        .HasColumnType("int");

                    b.HasKey("seatId");

                    b.HasIndex("tripId");

                    b.ToTable("Seat");
                });

            modelBuilder.Entity("Infrastructure.Models.Trip", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("busId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("price")
                        .HasColumnType("int");

                    b.Property<int>("tripType")
                        .HasColumnType("int");

                    b.Property<string>("userEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Trips");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            busId = "bus1",
                            price = 10,
                            tripType = 0,
                            userEmail = "mahmoud@gmail.com"
                        },
                        new
                        {
                            ID = 2,
                            busId = "bus1",
                            price = 10,
                            tripType = 0,
                            userEmail = "mahmoud@gmail.com"
                        },
                        new
                        {
                            ID = 3,
                            busId = "bus1",
                            price = 10,
                            tripType = 1,
                            userEmail = "mahmoud@gmail.com"
                        },
                        new
                        {
                            ID = 4,
                            busId = "bus1",
                            price = 10,
                            tripType = 1,
                            userEmail = "Yehia@gmail.com"
                        },
                        new
                        {
                            ID = 5,
                            busId = "bus1",
                            price = 10,
                            tripType = 1,
                            userEmail = "Yehia@gmail.com"
                        });
                });

            modelBuilder.Entity("Infrastructure.Models.Seat", b =>
                {
                    b.HasOne("Infrastructure.Models.Trip", null)
                        .WithMany("seats")
                        .HasForeignKey("tripId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Infrastructure.Models.Trip", b =>
                {
                    b.Navigation("seats");
                });
#pragma warning restore 612, 618
        }
    }
}
